@using FinalShopOnline.Models
@model FinalShopOnline.Models.Order
@{
    ViewBag.Title = "CheckOut";

    var shoppingCart = (ShoppingCart)Session["ShoppingCart"];
   
}

<div class="page-title-container">
    <div class="parallax has-caption parallax-image2">
        <div class="overlay v1"></div>
        <div class="page-title">
            <div class="container">

            </div>
        </div>
    </div>
</div>

<section id="content">
    <div class="container">
        <div class="top-name">
            <div class="row">
                <div class="col-md-12">
                    <div class="link-right">
                        <ol class="breadcrumb">
                            <li><a href="#">Trang Chủ</a></li>
                            <li><a href="#">Shopping Cart</a></li>
                        </ol>
                    </div>
                </div>
            </div>
        </div>

        <div class="woocommerce">
                @using (Html.BeginForm("UpdateShoppingCart", "ShoppingCart"))
                {
                    <table id="shoppingCart" class="shop_table cart box-sm">
                        <thead>
                            <tr>
                                <th class="product-remove">Xóa sản phẩm</th>
                                <th class="product-thumbnail">Ảnh sản phẩm</th>
                                <th class="product-name">Tên sản phẩm</th>
                                <th class="product-price">Giá bán</th>
                                <th class="product-quantity">Số lượng</th>
                                <th class="product-subtotal">Tổng tiền</th>
                            </tr>
                        </thead>
                        @{
                            decimal total = 0;
                            var stt = 1;
                        }
                        <tbody>
                            @foreach (var shoppingCartItem in shoppingCart.ShoppingCartItems)
                            {
                            <tr class="cart_item" id="row_@shoppingCartItem.Item.Id">
                                <td class="product-remove">
                                    <button onclick="RemoveCart('@shoppingCartItem.Item.Id'); return false;" type="button" class="btn btn-primary">
                                        <span class="glyphicon glyphicon-trash"></span>
                                    </button>
                                </td>
                                <td class="product-thumbnail">
                                    @if (string.IsNullOrEmpty(shoppingCartItem.Item.ImageUrl) == false)
                                        {
                                    <img src="@Url.Content(shoppingCartItem.Item.ImageUrl)" style="width: 80px" />
                                        }
                                </td>
                                <td class="product-name">
                                    <p>@shoppingCartItem.Item.Name</p>
                                </td>
                                <td class="product-price">
                                    @if (shoppingCartItem.Item.Discount > 0)
                                    {
                                        <p class="product-price" style="font-weight: bold">  @((shoppingCartItem.Item.Price * (100 - shoppingCartItem.Item.Discount) / 100).ToString("N0"))<sup>đ</sup></p>
                                    }
                                    else
                                    {
                                        <p class="product-price">Price: @shoppingCartItem.Item.Price.ToString("N0")<sup>đ</sup></p>
                                    }
                                </td>
                                <td class="product-quantity">
                                    <input type="hidden" name="ProductId_@stt" value="@shoppingCartItem.Item.Id" />
                                    <input type="number" name="Quantity_@stt" value="@shoppingCartItem.Quantity" title="Qty" class="input-text qty text" size="4">
                                </td>
                                <td class="product-subtotal">
                                    @{
                                            var quantity = shoppingCartItem.Quantity;
                                            var price = shoppingCartItem.Item.Price;
                                            var discount = shoppingCartItem.Item.Discount;
                                            var sum = (quantity * price) * ((100 - discount) / 100);
                                            total = total + sum;
                                    }
                                    <p class="product-price">@sum.ToString("N0")<sup>đ</sup></p>
                                </td>
                            </tr>
                            stt++;
                            }


                            <tr class="sum-products" id="update-total">
                                <td class="product-a"></td>
                                <td class="product-thumbnail"></td>
                                <td class="product-name"></td>
                                <td class="product-sum">
                                    <p>TỔNG CỘNG</p>
                                </td>
                                <td class="product-price"></td>
                                <td class="product-subtotal">
                                    <p class="product-price" id="update_price">@total.ToString("N0")<sup>đ</sup></p>
                                </td>
                            </tr>

                        </tbody>
                    </table>
                    <input type="submit" value="Cập nhật giỏ hàng" class="btn btn-default" />
                }
            <div class="row">
                <div class="flat-divider d50px"></div>
            </div>

            @using (Html.BeginForm("CheckOut", "ShoppingCart"))
            {
                @Html.Hidden("CreatedDate", DateTime.Now)
                @Html.Hidden("Status", "PENDING")
                @Html.Hidden("Code", Guid.NewGuid().ToString())
                @Html.AntiForgeryToken()
                
                <div class="row cart-collaterals">
                    <div class="col-md-5 col-sm-5">
                        <form class="shipping_calculator box">
                            <h4>Thông tin khách hàng:</h4>
                            <div class="form-group">
                                @Html.EditorFor(model => model.ContactName, new { htmlAttributes = new { @class = "input-text full-width", placeholder = "Họ Và Tên" } })
                                @Html.ValidationMessageFor(model => model.ContactName, "", new { @class = "text-danger invalid_text" })
                            </div>
                            <div class="form-group">
                                @Html.EditorFor(model => model.ContactAddress, new { htmlAttributes = new { @class = "input-text full-width", placeholder = "Địa Chỉ" } })
                                @Html.ValidationMessageFor(model => model.ContactAddress, "", new { @class = "text-danger invalid_text" })
                            </div>
                            <div class="form-group">
                                @Html.EditorFor(model => model.ContactPhone, new { htmlAttributes = new { @class = "input-text full-width", placeholder = "Điện Thoại" } })
                                @Html.ValidationMessageFor(model => model.ContactPhone, "", new { @class = "text-danger invalid_text", @min = "0" })
                            </div>
                            <div class="form-group stype-v1">
                                <button type="submit" class="btn btn-medium style1">Gởi Đơn Đặt Hàng</button>
                            </div>
                        </form>
                    </div>
                    <div class="col-md-7 col-sm-7">
                        <div class="chu-y">
                            <h4>Cách thức mua hàng trực tuyến:</h4>
                            <p><span>1. </span>Khách hàng chọn sản phẩm, điền đầy đủ thông tin đặt hàng rồi gởi cho cửa hàng.</p>
                            <p><span>2. </span>Cửa hàng sẽ liên hệ với quý khách trong thời gian sớm nhất để xác nhận thông tin đặt hàng.</p>
                            <p><span>3. </span>Nhân viên của của hàng sẽ giao hàng đến tận nơi và nhận thanh toán khi giao hàng.</p>
                            <div class="luu-y">
                                <p><span>Lưu ý: </span>Cửa hàng chỉ chấp nhận những đơn đặt hàng cung cấp thông tin chính xác về địa chỉ, số điện thoại.</p>
                            </div>
                        </div>
                        <div class="shopping_img">
                            <img src="~/images/shopping.gif">
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</section>

<div class="row">
    <div class="flat-divider d70px"></div>
</div>


@section scripts {
    <script>
        function RemoveCart(id) {
            $.post('@Url.Action("RemoveCart", "ShoppingCart")', { ProductId: id })
              .done(function (data) {

                  $('table#shoppingCart tr#row_' + id).remove();
                  $.get("@Url.Action("GetCartNumbers", "ShoppingCart")", function (data) {

                      $("#notification-count").text(data);
                      $.get("@Url.Action("GetShoppingCartItems", "ShoppingCart")", function(data) {
                          var html = "<table class='table'>";
                          html += "<tr>";
                          html += "<th>Ảnh</th>";
                          html += "<th>Tên sản phẩm</th>";
                          html += "<th>Đơn giá</th>";
                          html += "<th>Số lượng</th>";
                          html += "<th>Thành tiền</th>";
                          html += "</tr>";

                          var total = 0;
                          jQuery.each(data, function (index, item) {

                              var sum = (item.Price * (100 - item.Discount) / 100) * item.Quantity;
                              total += sum;
                              html += "<tr>";
                              html += "<td>";
                              html += "<img class='img img-thumbnail' style='width: 60px;' src='" + item.ImageUrl.replace('~/', '/') + "'>";
                              html += "</td>";

                              html += "<td>" + item.Name + "</td>";
                              html += "<td>" + item.Price + "<sup>đ</sup></td>";
                              html += "<td>" + item.Quantity + "</td>";
                              html += "<td>" + sum + "<sup>đ</sup></td>";
                              html += "</tr>";
                              console.log(item.Id + " - " + item.Name);
                          });
                          html += "<tr>";
                          html += "<td colspan='4'><h4>Tổng tiền:<h4></td>";
                          html += "<td>" + total + "<sup>đ</sup></td>";
                          html += "</tr>";
                          html += "</table>";

                          $("#notification").html("");
                          $("#notification").html(html);
                      });
                      $.get("@Url.Action("GetShoppingCartItems", "ShoppingCart")", function(data) {
                          var total = 0;
                          jQuery.each(data, function (index, item) {
                              var sum = (item.Price * (100 - item.Discount) / 100) * item.Quantity;
                              total += sum;
                          });

                          var html = "<p class='product-price' id='update_price'>" + total + "<sup>đ</sup></p>";

                          $("#update_price").html("");
                          $("#update_price").html(html);
                      });
                  });
              });
        }

    </script>
}